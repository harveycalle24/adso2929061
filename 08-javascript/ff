<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>18 - Pokedex</title>
  <link rel="stylesheet" href="../css/styles.css" />
  <link rel="icon" href="images/favicon.ico" type="image/x-icon" />
  <style>
    body {
      margin: 0;
      font-family: Arial, sans-serif;
      background: #111;
      color: #fff;
    }

    section {
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
    }

    nav svg {
      width: 32px;
      height: 32px;
      margin: 1rem;
    }

    #home {
      width: 380px;
      height: 700px;
      background: url(image/pokedex/fondohome.svg) center center no-repeat;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: flex-end;
    }

    #home.hide,
    #list-pokemons.hide,
    .loader.hide,
    .pokemons.hide {
      display: none;
    }

    .btn-list img {
      animation: shine 2s infinite;
      border-radius: 50%;
      transition: transform 0.3s ease;
    }

    @keyframes shine {
      0% {
        filter: brightness(1);
      }
      50% {
        filter: brightness(1.8);
        transform: scale(1.05);
      }
      100% {
        filter: brightness(1);
      }
    }

    #list-pokemons {
      background: url(image/pokedex/fondolist.svg);
      padding: 10px;
    }

    select.pk-generation {
      appearance: none;
      padding: 0.4rem 0.8rem;
      display: flex;
      margin: 2rem auto;
    }

    ul.pokemons {
      list-style: none;
      margin: 0;
      padding: 0;
      display: grid;
      grid-template-columns: repeat(1, 1fr);
      height: 600px;
      overflow-y: scroll;
      gap: 1rem;
    }

    ul.pokemons::-webkit-scrollbar {
      background-color: transparent;
    }

    ul.pokemons::-webkit-scrollbar-thumb {
      background-color: transparent;
    }

    .pokemon-card {
      background-image: url('image/pokedex/pukon01.svg');
      background-size: cover;
      background-position: center;
      border-radius: 1rem;
      padding: 1rem;
      color: white;
      display: flex;
      flex-direction: column;
      gap: 0.5rem;
      box-shadow: 0 0 10px #ffeb3b88;
      text-align: center;
    }

    .card-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      font-weight: bold;
    }

    .pk-name {
      font-size: 1.5rem;
      color: #ffd43b;
    }

    .pk-id {
      font-size: 1rem;
      color: white;
    }

    .pk-type {
      background: #f7d02c;
      color: black;
      padding: 0.2rem 0.5rem;
      border-radius: 50%;
    }

    .pk-image img {
      width: 100px;
      display: block;
      margin: 0 auto;
    }

    .pk-stats {
      background: rgba(0, 0, 0, 0.6);
      padding: 0.5rem;
      border-radius: 0.5rem;
    }

    .pk-stats .stat {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      margin-bottom: 0.3rem;
    }

    .pk-stats label {
      width: 3rem;
      font-size: 0.85rem;
    }

    .pk-stats .bar {
      height: 0.5rem;
      border-radius: 0.25rem;
      flex: 1;
      background: #444;
      position: relative;
      overflow: hidden;
    }

    .bar::after {
      content: '';
      position: absolute;
      height: 100%;
      top: 0;
      left: 0;
      background: linear-gradient(to right, #ff9800, #ffd600);
      width: inherit;
    }

    .loader {
      display: flex;
      margin: 8rem auto;
      width: 160px;
    }
  </style>
</head>

<body class="js">
  <nav>
    <a href="index.html">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512">
        <path fill="#ffffff"
          d="M575.8 255.5c0 18-15 32.1-32 32.1h-32l.7 160.2c0 2.7-.2 5.4-.5 8.1V472c0 22.1-17.9 40-40 40H456c-1.1 0-2.2 0-3.3-.1c-1.4 .1-2.8 .1-4.2 .1H416 392c-22.1 0-40-17.9-40-40V448 384c0-17.7-14.3-32-32-32H256c-17.7 0-32 14.3-32 32v64 24c0 22.1-17.9 40-40 40H160 128.1c-1.5 0-3-.1-4.5-.2c-1.2 .1-2.4 .2-3.6 .2H104c-22.1 0-40-17.9-40-40V360c0-.9 0-1.9 .1-2.8V287.6H32c-18 0-32-14-32-32.1c0-9 3-17 10-24L266.4 8c7-7 15-8 22-8s15 2 21 7L564.8 231.5c8 7 12 15 11 24z">
        </path>
      </svg>
    </a>
  </nav>

  <main>
    <header>
      <h1>18 - Pokedex</h1>
      <h2>Obt√©n y muestra datos de la API de Pokedex</h2>
    </header>

    <section>
      <div id="home">
        <a href="#list-pokemons" class="btn-list">
          <img src="image/pokedex/btn-list.svg" alt="Buscar" />
        </a>
      </div>

      <div id="list-pokemons" class="hide">
        <a href="#home" class="backhome">
          <svg xmlns="http://www.w3.org/2000/svg" height="20" width="17.5" viewBox="0 0 448 512">
            <path fill="#FFD43B"
              d="M9.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l160 160c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L109.2 288 416 288c17.7 0 32-14.3 32-32s-14.3-32-32-32l-306.7 0L214.6 118.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-160 160z" />
          </svg>
        </a>
        <img src="image/pokedex/logolist.svg" alt="logo" />
        <select class="pk-generation"></select>
        <img class="loader" src="image/giphy.gif" alt="Loading..." />
        <ul class="pokemons"></ul>
      </div>
    </section>
  </main>

  <script>
    const btnlist = document.querySelector('.btn-list');
  const home = document.querySelector('#home');
  const listpokemons = document.querySelector('#list-pokemons');
  const backhome = document.querySelector('.backhome');
  const pkGeneration = document.querySelector('.pk-generation');
  const pokemons = document.querySelector('.pokemons');
  const loader = document.querySelector('.loader');

  const types = {
    electric: { color: "#f7d02c", emoji: "‚ö°" },
    normal: { color: "#a8a77a", emoji: "üîò" },
    fire: { color: "#ee8130", emoji: "üî•" },
    water: { color: "#6390f0", emoji: "üíß" },
    grass: { color: "#7ac74c", emoji: "üåø" },
    ice: { color: "#96d9d6", emoji: "‚ùÑÔ∏è" },
    fighting: { color: "#c22e28", emoji: "ü•ä" },
    poison: { color: "#a33ea1", emoji: "‚ò†Ô∏è" },
    ground: { color: "#e2bf65", emoji: "‚õ∞Ô∏è" },
    flying: { color: "#a98ff3", emoji: "üïäÔ∏è" },
    psychic: { color: "#f95587", emoji: "üîÆ" },
    bug: { color: "#a6b91a", emoji: "üêõ" },
    rock: { color: "#b6a136", emoji: "ü™®" },
    ghost: { color: "#735797", emoji: "üëª" },
    dragon: { color: "#6f35fc", emoji: "üêâ" },
    dark: { color: "#705746", emoji: "üåë" },
    steel: { color: "#b7b7ce", emoji: "‚öôÔ∏è" },
    fairy: { color: "#d685ad", emoji: "üßö" },
    shadow: { color: "#5a5a5a", emoji: "üå´Ô∏è" },
    unknown: { color: "#68a090", emoji: "‚ùî" }
  };

  const generations = {
    range: [
      { from: 1, to: 151 },
      { from: 152, to: 251 },
      { from: 252, to: 386 },
      { from: 387, to: 493 },
      { from: 494, to: 649 },
      { from: 650, to: 721 },
      { from: 722, to: 809 },
      { from: 810, to: 890 },
      { from: 891, to: 1025 }
    ]
  };

  btnlist.addEventListener('click', () => {
    home.classList.add('hide');
    listpokemons.classList.remove('hide');
  });

  backhome.addEventListener('click', () => {
    home.classList.remove('hide');
    listpokemons.classList.add('hide');
  });

  pkGeneration.innerHTML = `<option value="">Select a generation...</option>`;
  generations.range.forEach((g, i) => {
    pkGeneration.innerHTML += `<option value="${i}">Generation ${i + 1}</option>`;
  });

  pkGeneration.addEventListener('change', function () {
    if (this.value !== "") {
      loadPokemon(generations.range[this.value].from, generations.range[this.value].to);
    }
  });

  const loadPokemon = async (start, end) => {
    pokemons.classList.add('hide');
    loader.classList.remove('hide');
    pokemons.innerHTML = "";

    setTimeout(async () => {
      loader.classList.add('hide');
      pokemons.classList.remove('hide');
      for (let pk = start; pk <= end; pk++) {
        const url = `https://pokeapi.co/api/v2/pokemon/${pk}`;
        const response = await fetch(url);
        const data = await response.json();

        const stats = data.stats.map(s => s.base_stat);
        const type = data.types[0].type.name;
        const typeData = types[type] || { color: "#fff", emoji: "‚ùî" };

        pokemons.innerHTML += `
          <li class="pokemon-card">
            <div class="card-header">
              <h2 class="pk-name">${data.name}</h2>
              <span class="pk-id">#${data.id}</span>
              <span class="pk-type" style="background:${typeData.color}">
                ${typeData.emoji} ${type}
              </span>
            </div>
            <div class="pk-image">
              <img src="${data.sprites.front_default}" alt="${data.name}">
            </div>
            <div class="pk-stats">
              <h3>PK Stats</h3>
              ${['HP', 'Atk', 'Def', 'SAtk', 'SDef', 'Spd', 'Total'].map((label, i) => {
                const width = label === 'Total'
                  ? stats.reduce((a, b) => a + b, 0) / 6
                  : stats[i];
                return `<div class="stat">
                          <label>${label}</label>
                          <div class="bar" style="width: ${width}%;"></div>
                        </div>`;
              }).join('')}
            </div>
          </li>`;
      }
    }, 1000);
  };

    // Load first generation by default
    loadPokemon(1, 151);
  </script>
</body>
</html>


<script>
const btnlist = document.querySelector('.btn-list');
const home = document.querySelector('#home');
const listpokemons = document.querySelector('#list-pokemons');
const backhome = document.querySelector('.backhome');
const pkGeneration = document.querySelector('.pk-generation');
const pokemons = document.querySelector('.pokemons');
const loader = document.querySelector('.loader');

const types = {
  electric: { color: "#f7d02c", emoji: "‚ö°" },
  normal: { color: "#a8a77a", emoji: "üîò" },
  fire: { color: "#ee8130", emoji: "üî•" },
  water: { color: "#6390f0", emoji: "üíß" },
  grass: { color: "#7ac74c", emoji: "üåø" },
  ice: { color: "#96d9d6", emoji: "‚ùÑÔ∏è" },
  fighting: { color: "#c22e28", emoji: "ü•ä" },
  poison: { color: "#a33ea1", emoji: "‚ò†Ô∏è" },
  ground: { color: "#e2bf65", emoji: "‚õ∞Ô∏è" },
  flying: { color: "#a98ff3", emoji: "üïäÔ∏è" },
  psychic: { color: "#f95587", emoji: "üîÆ" },
  bug: { color: "#a6b91a", emoji: "üêõ" },
  rock: { color: "#b6a136", emoji: "ü™®" },
  ghost: { color: "#735797", emoji: "üëª" },
  dragon: { color: "#6f35fc", emoji: "üêâ" },
  dark: { color: "#705746", emoji: "üåë" },
  steel: { color: "#b7b7ce", emoji: "‚öôÔ∏è" },
  fairy: { color: "#d685ad", emoji: "üßö" },
  shadow: { color: "#5a5a5a", emoji: "üå´Ô∏è" },
  unknown: { color: "#68a090", emoji: "‚ùî" }
};

const generations = {
  range: [
    { from: 1, to: 151 },
    { from: 152, to: 251 },
    { from: 252, to: 386 },
    { from: 387, to: 493 },
    { from: 494, to: 649 },
    { from: 650, to: 721 },
    { from: 722, to: 809 },
    { from: 810, to: 890 },
    { from: 891, to: 1025 }
  ]
};

btnlist.addEventListener('click', () => {
  home.classList.add('hide');
  listpokemons.classList.remove('hide');
});

backhome.addEventListener('click', () => {
  home.classList.remove('hide');
  listpokemons.classList.add('hide');
});

pkGeneration.innerHTML = `<option value="">Select a generation...</option>`;
generations.range.forEach((g, i) => {
  pkGeneration.innerHTML += `<option value="${i}">Generation ${i + 1}</option>`;
});

pkGeneration.addEventListener('change', function () {
  if (this.value !== "") {
    loadPokemonNames(generations.range[this.value].from, generations.range[this.value].to);
  }
});

async function loadPokemonNames(start, end) {
  pokemons.classList.add('hide');
  loader.classList.remove('hide');
  pokemons.innerHTML = "";

  setTimeout(async () => {
    loader.classList.add('hide');
    pokemons.classList.remove('hide');

    for (let pk = start; pk <= end; pk++) {
      const url = `https://pokeapi.co/api/v2/pokemon/${pk}`;
      const response = await fetch(url);
      const data = await response.json();

      const li = document.createElement('li');
      li.textContent = `${data.name}`;
      li.style.cursor = "pointer";
      li.style.padding = "0.5rem";
      li.style.borderBottom = "1px solid #fff";
      li.style.fontWeight = "bold";

      li.addEventListener('click', () => {
        displayPokemonDetails(data);
      });

      pokemons.appendChild(li);
    }
  }, 500);
}

function displayPokemonDetails(data) {
  const stats = data.stats.map(s => s.base_stat);
  const type = data.types[0].type.name;
  const typeData = types[type] || { color: "#fff", emoji: "‚ùî" };

  pokemons.innerHTML = `
    <li class="pokemon-card">
      <div class="card-header">
        <h2 class="pk-name">${data.name}</h2>
        <span class="pk-id">#${data.id}</span>
        <span class="pk-type" style="background:${typeData.color}">
          ${typeData.emoji} ${type}
        </span>
      </div>
      <div class="pk-image">
        <img src="${data.sprites.front_default}" alt="${data.name}">
      </div>
      <div class="pk-stats">
        <h3>PK Stats</h3>
        ${['HP', 'Atk', 'Def', 'SAtk', 'SDef', 'Spd', 'Total'].map((label, i) => {
          const width = label === 'Total'
            ? stats.reduce((a, b) => a + b, 0) / 6
            : stats[i];
          return `<div class="stat">
                    <label>${label}</label>
                    <div class="bar" style="width: ${width}%;"></div>
                  </div>`;
        }).join('')}
      </div>
    </li>`;
}
</script>